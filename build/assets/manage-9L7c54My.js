import{c as l,o,a as t,t as f,F as g,r as k,_ as A,v as m,x as C,y as p,z as x,b as c,d as T,n as y,e as U,A as w,w as v,B as D,f as P,g as h,h as B,l as b,C as $,i as N,j as I,k as j,D as G,m as F,p as L,E as K,q as V,s as z,u as R}from"./index.es-CSSxMzOQ.js";/* empty css                   */const J={class:"name-list"},H={class:"name-list-ul"},W=["onClick"],q={name:"StudentMenu",props:{students:{required:!0,default:[{fname:"Joost",id:9999}],type:Array},current:{required:!0,default:{fname:"Joost",id:9999},type:Object}}},E=Object.assign(q,{setup(e){const i=a=>{localStorage.setItem("student",a),window.location.href=`/manage/${a}`};return(a,r)=>(o(),l("details",null,[t("summary",null,f(e.current.fname),1),t("div",J,[t("ul",H,[(o(!0),l(g,null,k(e.students,s=>(o(),l("li",{key:s.id,class:"name-list-li"},[t("a",{onClick:n=>i(s.id)},f(s.fname),9,W)]))),128))])])]))}}),O=["id"],Y={class:"row-top"},Z={key:0,class:"table-text check-table"},Q=["for"],X=["id"],ee={key:1,class:"table-text check-table"},ae=["for"],te=["id"],ie={class:"table-text date-table"},se={class:"table-text time-table class-in"},ne={class:"table-text time-table class-in"},re={class:"table-text rate-table"},oe={class:"table-text charge-table"},le={class:"table-text btn-table"},de=["id"],ue={class:"table-input check-table-input"},ce=["id"],me=["id"],fe=["for"],Ae={class:"table-input date-table"},be=["id","value"],Te={class:"table-input time-table class-in"},Se=["id","value"],he={class:"table-input time-table class-in"},pe=["id","value"],Ce={class:"table-input rate-table"},ve=["id","value"],ge={class:"table-input btn-table-input"},ke={name:"Session",props:{selected:{required:!1,default:!1,type:Boolean},paid:{required:!1,default:!1,type:Boolean},id:{required:!0,default:9999,unique:!0,type:Number},time_in:{required:!1,default:Date.now()-1e3*60*60,type:String},time_out:{required:!1,default:Date.now(),type:String},rate:{required:!0,default:65,type:Number}},components:[A],methods:{async editSession(){const e=document.getElementById(`${this.id}-paid`).checked,i=document.getElementById(`${this.id}-date`).value,a=document.getElementById(`${this.id}-intime`).value,r=document.getElementById(`${this.id}-outtime`).value,s=document.getElementById(`${this.id}-rate`).value;let n=new Date(i),u=this.parseTime(a),d=this.parseTime(r);u.setDate(n.getDate()),u.setMonth(n.getMonth()),u.setFullYear(n.getFullYear()),d.setDate(n.getDate()),d.setMonth(n.getMonth()),d.setFullYear(n.getFullYear()),await(await fetch("/api/sessions/update",{method:"post",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({student:Number(localStorage.getItem("student")),number:this.id,paid:e,in_time:u,out_time:d,rate:s})})).json(),window.location.reload()},parseTime(e){const i=/^\d{1,2}\s?\w{2}$/,a=/^\d{1,2}\W?\d{1,2}\s?(\w{2})?$/;if(i.test(e)){const r=/\W/g;e=e.toLowerCase(),e=e.replaceAll(r,"");let s=new Date;if(e.substring(e.length-2)==="am"){let n=Number(e.substring(0,e.length-2));return n===12||n<0?s.setHours(0):n>12?s.setHours(n%12):s.setHours(n),s.setMinutes(0),s.setSeconds(0),s}else if(e.substring(e.length-2)==="pm"){let n=Number(e.substring(0,e.length-2));return n>12?s.setHours(n%12+12):n===12||n<=0?s.setHours(12):s.setHours(n+12),s.setMinutes(0),s.setSeconds(0),s}else return new Date}else if(a.test(e)){const r=/\W/g;e=e.toLowerCase(),e=e.replaceAll(r,"");let s=!1,n=0;e.substring(e.length-2)==="am"?(s=!0,n=0,e=e.substring(0,e.length-2)):e.substring(e.length-2)==="pm"&&(s=!0,n=12,e=e.substring(0,e.length-2));let u,d;u=Number(e.substring(e.length-2)),d=Number(e.substring(0,e.length-2)),d>=24&&(s=!1),u=u%60,d=d%24,d<12&&s?d+=n:d===12&&s&&n===0&&(d=0);let S=new Date;return S.setHours(d),S.setMinutes(u),S.setSeconds(0),S}else return new Date},async deleteSession(){if(window.confirm("Delete this session?")){const i=await(await fetch("/api/sessions/delete",{method:"post",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({number:this.id,student:localStorage.getItem("student")})})).json();i.error?console.error(i.msg):window.location.reload()}}}},M=Object.assign(ke,{emits:["selected"],setup(e,{emit:i}){const a=i,r=s=>{document.querySelector(`#details-${s}`).classList.toggle("hidden")};return(s,n)=>(o(),l("div",{id:`row-${e.id}`,class:y(`session-row ${e.paid?"":"unpaid"}`)},[t("div",Y,[e.selected?(o(),l("span",Z,[t("label",{class:"screen-reader-only",for:`${e.id}-checkbox`},"Use in invoice",8,Q),t("input",{id:`${e.id}-checkbox`,type:"checkbox",checked:"",onChange:n[0]||(n[0]=u=>a("selected"))},null,40,X)])):(o(),l("span",ee,[t("label",{class:"screen-reader-only",for:`${e.id}-checkbox`},"Use in invoice",8,ae),t("input",{id:`${e.id}-checkbox`,type:"checkbox",unchecked:"",onChange:n[1]||(n[1]=u=>a("selected"))},null,40,te)])),n[3]||(n[3]=t("span",{class:"table-text id-table"}," ",-1)),t("span",ie,f(m(C)(e.time_in)),1),t("span",se,f(m(p)(e.time_in)),1),t("span",ne,f(m(p)(e.time_out)),1),t("span",re,"$"+f(e.rate),1),t("span",oe,"$"+f(m(x)(e.time_in,e.time_out,e.rate)),1),t("span",le,[c(A,{classes:"btn btn-manage",label:"Manage this session",onClicked:n[2]||(n[2]=u=>r(e.id)),base:"pencil",alt:"caret-up"})])]),t("div",{id:`details-${e.id}`,class:"row-bottom hidden"},[t("span",ue,[e.paid?(o(),l("input",{key:0,type:"checkbox",id:`${e.id}-paid`,checked:""},null,8,ce)):(o(),l("input",{key:1,type:"checkbox",id:`${e.id}-paid`,unchecked:""},null,8,me)),t("label",{for:`${e.id}-paid`},"Paid",8,fe)]),t("span",Ae,[t("input",{type:"text",id:`${e.id}-date`,value:`${m(C)(e.time_in)}`},null,8,be)]),t("span",Te,[t("input",{type:"text",id:`${e.id}-intime`,value:`${m(p)(e.time_in)}`},null,8,Se)]),t("span",he,[t("input",{type:"text",id:`${e.id}-outtime`,value:`${m(p)(e.time_out)}`},null,8,pe)]),t("span",Ce,[t("input",{type:"text",id:`${e.id}-rate`,value:e.rate},null,8,ve)]),t("span",ge,[c(A,{classes:"btn btn-save",label:"Save changes",onClicked:s.editSession,base:"save"},null,8,["onClicked"]),n[4]||(n[4]=T("   ")),c(A,{classes:"btn btn-del",label:"Delete session",onClicked:s.deleteSession,base:"minus"},null,8,["onClicked"])])],8,de)],10,O))}}),ye={class:"edit-name"},Ue=["value"],Ee=["value"],Me=["value"],_e={key:0},xe={key:1},we={name:"NameMenu",props:{fname:{required:!0,default:"",type:String},lname:{required:!0,default:"",type:String},active:{required:!0,default:!0,type:Boolean},rate:{required:!0,default:60,type:Number}},components:{IconButton:A},methods:{saveClick:async()=>{const e=document.getElementById("fname").value,i=document.getElementById("lname").value,a=document.getElementById("active").checked,r=document.getElementById("rate-field").value;await fetch("/api/students/update",{method:"post",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({id:localStorage.getItem("student"),fname:e,lname:i,active:a,rate:r})}),window.location.reload()}}},_=Object.assign(we,{setup(e){return(i,a)=>(o(),l("div",ye,[a[2]||(a[2]=t("label",{for:"fname",class:"screen-reader-only"},"First",-1)),t("input",{type:"text",id:"fname",value:e.fname},null,8,Ue),a[3]||(a[3]=t("label",{for:"lname",class:"screen-reader-only"},"Last",-1)),t("input",{type:"text",id:"lname",value:e.lname},null,8,Ee),a[4]||(a[4]=t("label",{for:"rate-field",class:"screen-reader-only"},"Last",-1)),a[5]||(a[5]=t("label",null,"$",-1)),t("input",{type:"text",id:"rate-field",value:e.rate},null,8,Me),a[6]||(a[6]=t("label",null,"/hour",-1)),e.active?(o(),l("span",_e,a[0]||(a[0]=[t("label",{for:"active"},"Active",-1),t("input",{type:"checkbox",id:"active",checked:""},null,-1)]))):(o(),l("span",xe,a[1]||(a[1]=[t("label",{for:"active"},"Active",-1),t("input",{type:"checkbox",id:"active",unchecked:""},null,-1)]))),c(A,{classes:"btn btn-save",onClicked:i.saveClick,base:"save"},null,8,["onClicked"])]))}}),De={id:"main"},Pe={class:"tile"},Be={class:"header-left"},$e={class:"nav-back btn",href:"/landing"},Ne={class:"session-controls"},Ie={class:"date-range"},je=["value"],Ge=["value"],Fe={class:"session-controls"},Le={id:"timezone-menu"},Ke=["value"],Ve={id:"session-table"},ze={class:"table-header"},Re={class:"check-table"},Je={class:"check-list"},He={class:"check-list-ul"},We={class:"check-list-li"},qe={class:"check-list-li"},Oe={class:"check-list-li"},Ye={class:"check-list-li"},Ze={class:"check-list-li"},Qe={class:"row-container"},Xe={key:0,class:y("session-row")},ea={name:"app",components:{StudentMenu:E,AuthMenu:U,Session:M,NameMenu:_,IconButton:A},async mounted(){this.populateUser(),await this.getSessions(),await this.getStudents(),this.createDateFilter()},methods:{populateUser(){this.User={displayName:decodeURIComponent(h("displayName")),rate:Number(h("rate"))}},async add_session(){const i=await(await fetch("/api/sessions/add",{method:"post",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({student:Number(h("student")),in_time:Date.now()-36e5,out_time:Date.now(),rate:this.CurrentStudent.rate,paid:!1})})).json();if(i.error)window.alert(i.msg);else{let a=i.data;a.selected=!1,this.Sessions=[a,...this.Sessions],this.Filtered=[a,...this.Filtered]}},async getSessions(){const i=await(await fetch(`/api/sessions/read/${h("student")}`)).json();i.error?console.log(i.msg):(this.Sessions=i.data.sort((a,r)=>new Date(r.in_time).getTime()-new Date(a.in_time).getTime()),this.Filtered=i.data.sort((a,r)=>new Date(r.in_time).getTime()-new Date(a.in_time).getTime()))},async getStudents(){const i=await(await fetch("/api/students/read")).json();i.error?console.log(i.msg):(this.AllStudents=i.data,this.CurrentStudent=i.data.filter(a=>a.id===Number(h("student")))[0])},async get_invoice(){const e=document.getElementById("timezone-menu").value;let i=[];this.Filtered.map(r=>{r.selected&&i.push(r.number)}),i=i.sort((r,s)=>r>s),console.log(i);const a=await fetch("/api/sessions/invoice",{method:"post",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({student:this.CurrentStudent,sessions:i,timezone:e})});if(a.status===200){const r=await a.blob(),s=window.URL.createObjectURL(r);let n=document.createElement("a");n.href=s,n.download=`${this.CurrentStudent.fname}_${this.CurrentStudent.lname}.pdf`,n.click(),window.URL.revokeObjectURL(s)}else{const r=await a.json();window.alert(r.msg)}},createDateFilter(){if(this.Sessions.length>0){const e=this.Sessions[this.Sessions.length-1].in_time,i=this.Sessions[0].in_time;this.Dates={start:e,end:i}}},filterDates(){let e=document.getElementById("date-start").value,i=document.getElementById("date-end").value;e=this.parse_date(e),i=this.parse_date(i);let a,r;e==="invalid"?a=this.Dates.start:a=new Date(e),i==="invalid"?r=this.Dates.end:r=new Date(i),r.setHours(23),r.setMinutes(59),r<a?window.alert("End date cannot be earlier than start date"):(this.Dates.start=a,this.Dates.end=r,this.Filtered=this.Filtered.filter(s=>new Date(s.in_time)>=a&&new Date(s.in_time)<=r))},resetDateFilter(){this.createDateFilter(),this.viewAllSessions()},viewAllSessions(){this.Filtered=this.Sessions},viewPaidSessions(){this.Filtered=this.Sessions.filter(e=>e.paid===!0)},viewUnpaidSessions(){this.Filtered=this.Sessions.filter(e=>e.paid===!1)},checkFiltered(){this.Filtered=this.Filtered.map(e=>(e.selected=!0,e))},uncheckFiltered(){this.Filtered=this.Filtered.map(e=>(e.selected=!1,e))},updateFiltered(e){this.Filtered=this.Filtered.map(i=>(i.number===e&&(i.selected=!i.selected),i))},parse_date(e){const i=/^\d{1,2}\/\d{1,2}$/,a=/^\d{1,2}\/\d{1,2}\/(\d{2}|\d{4})$/;if(i.test(e)){let r=e.split("/"),s=new Date().getFullYear();return r.push(s.toString()),r.join("/")}else if(a.test(e))return e;return"invalid"}},data(){return{Sessions:[],Filtered:[],AllStudents:[],CurrentStudent:{},Dates:{start:void 0,end:void 0},User:{},Timezones:[{value:"Dateline Standard Time",abbr:"DST",offset:-12,isdst:!1,text:"(UTC-12:00) International Date Line West",utc:["Etc/GMT+12"]},{value:"UTC-11",abbr:"U",offset:-11,isdst:!1,text:"(UTC-11:00) Coordinated Universal Time-11",utc:["Etc/GMT+11","Pacific/Midway","Pacific/Niue","Pacific/Pago_Pago"]},{value:"Hawaiian Standard Time",abbr:"HST",offset:-10,isdst:!1,text:"(UTC-10:00) Hawaii",utc:["Etc/GMT+10","Pacific/Honolulu","Pacific/Johnston","Pacific/Rarotonga","Pacific/Tahiti"]},{value:"Alaskan Standard Time",abbr:"AKDT",offset:-8,isdst:!0,text:"(UTC-09:00) Alaska",utc:["America/Anchorage","America/Juneau","America/Nome","America/Sitka","America/Yakutat"]},{value:"Pacific Standard Time (Mexico)",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-08:00) Baja California",utc:["America/Santa_Isabel"]},{value:"Pacific Daylight Time",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-07:00) Pacific Daylight Time (US & Canada)",utc:["America/Los_Angeles","America/Tijuana","America/Vancouver"]},{value:"Pacific Standard Time",abbr:"PST",offset:-8,isdst:!1,text:"(UTC-08:00) Pacific Standard Time (US & Canada)",utc:["America/Los_Angeles","America/Tijuana","America/Vancouver","PST8PDT"]},{value:"US Mountain Standard Time",abbr:"UMST",offset:-7,isdst:!1,text:"(UTC-07:00) Arizona",utc:["America/Creston","America/Dawson","America/Dawson_Creek","America/Hermosillo","America/Phoenix","America/Whitehorse","Etc/GMT+7"]},{value:"Mountain Standard Time (Mexico)",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Chihuahua, La Paz, Mazatlan",utc:["America/Chihuahua","America/Mazatlan"]},{value:"Mountain Standard Time",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Mountain Time (US & Canada)",utc:["America/Boise","America/Cambridge_Bay","America/Denver","America/Edmonton","America/Inuvik","America/Ojinaga","America/Yellowknife","MST7MDT"]},{value:"Central America Standard Time",abbr:"CAST",offset:-6,isdst:!1,text:"(UTC-06:00) Central America",utc:["America/Belize","America/Costa_Rica","America/El_Salvador","America/Guatemala","America/Managua","America/Tegucigalpa","Etc/GMT+6","Pacific/Galapagos"]},{value:"Central Standard Time",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Central Time (US & Canada)",utc:["America/Chicago","America/Indiana/Knox","America/Indiana/Tell_City","America/Matamoros","America/Menominee","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Rainy_River","America/Rankin_Inlet","America/Resolute","America/Winnipeg","CST6CDT"]},{value:"Central Standard Time (Mexico)",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Guadalajara, Mexico City, Monterrey",utc:["America/Bahia_Banderas","America/Cancun","America/Merida","America/Mexico_City","America/Monterrey"]},{value:"Canada Central Standard Time",abbr:"CCST",offset:-6,isdst:!1,text:"(UTC-06:00) Saskatchewan",utc:["America/Regina","America/Swift_Current"]},{value:"SA Pacific Standard Time",abbr:"SPST",offset:-5,isdst:!1,text:"(UTC-05:00) Bogota, Lima, Quito",utc:["America/Bogota","America/Cayman","America/Coral_Harbour","America/Eirunepe","America/Guayaquil","America/Jamaica","America/Lima","America/Panama","America/Rio_Branco","Etc/GMT+5"]},{value:"Eastern Standard Time",abbr:"EST",offset:-5,isdst:!1,text:"(UTC-05:00) Eastern Time (US & Canada)",utc:["America/Detroit","America/Havana","America/Indiana/Petersburg","America/Indiana/Vincennes","America/Indiana/Winamac","America/Iqaluit","America/Kentucky/Monticello","America/Louisville","America/Montreal","America/Nassau","America/New_York","America/Nipigon","America/Pangnirtung","America/Port-au-Prince","America/Thunder_Bay","America/Toronto"]},{value:"Eastern Daylight Time",abbr:"EDT",offset:-4,isdst:!0,text:"(UTC-04:00) Eastern Daylight Time (US & Canada)",utc:["America/Detroit","America/Havana","America/Indiana/Petersburg","America/Indiana/Vincennes","America/Indiana/Winamac","America/Iqaluit","America/Kentucky/Monticello","America/Louisville","America/Montreal","America/Nassau","America/New_York","America/Nipigon","America/Pangnirtung","America/Port-au-Prince","America/Thunder_Bay","America/Toronto"]},{value:"US Eastern Standard Time",abbr:"UEDT",offset:-5,isdst:!1,text:"(UTC-05:00) Indiana (East)",utc:["America/Indiana/Marengo","America/Indiana/Vevay","America/Indianapolis"]},{value:"Venezuela Standard Time",abbr:"VST",offset:-4.5,isdst:!1,text:"(UTC-04:30) Caracas",utc:["America/Caracas"]},{value:"Paraguay Standard Time",abbr:"PYT",offset:-4,isdst:!1,text:"(UTC-04:00) Asuncion",utc:["America/Asuncion"]},{value:"Atlantic Standard Time",abbr:"ADT",offset:-3,isdst:!0,text:"(UTC-04:00) Atlantic Time (Canada)",utc:["America/Glace_Bay","America/Goose_Bay","America/Halifax","America/Moncton","America/Thule","Atlantic/Bermuda"]},{value:"Central Brazilian Standard Time",abbr:"CBST",offset:-4,isdst:!1,text:"(UTC-04:00) Cuiaba",utc:["America/Campo_Grande","America/Cuiaba"]},{value:"SA Western Standard Time",abbr:"SWST",offset:-4,isdst:!1,text:"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",utc:["America/Anguilla","America/Antigua","America/Aruba","America/Barbados","America/Blanc-Sablon","America/Boa_Vista","America/Curacao","America/Dominica","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guyana","America/Kralendijk","America/La_Paz","America/Lower_Princes","America/Manaus","America/Marigot","America/Martinique","America/Montserrat","America/Port_of_Spain","America/Porto_Velho","America/Puerto_Rico","America/Santo_Domingo","America/St_Barthelemy","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Tortola","Etc/GMT+4"]},{value:"Pacific SA Standard Time",abbr:"PSST",offset:-4,isdst:!1,text:"(UTC-04:00) Santiago",utc:["America/Santiago","Antarctica/Palmer"]},{value:"Newfoundland Standard Time",abbr:"NDT",offset:-2.5,isdst:!0,text:"(UTC-03:30) Newfoundland",utc:["America/St_Johns"]},{value:"E. South America Standard Time",abbr:"ESAST",offset:-3,isdst:!1,text:"(UTC-03:00) Brasilia",utc:["America/Sao_Paulo"]},{value:"Argentina Standard Time",abbr:"AST",offset:-3,isdst:!1,text:"(UTC-03:00) Buenos Aires",utc:["America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Buenos_Aires","America/Catamarca","America/Cordoba","America/Jujuy","America/Mendoza"]},{value:"SA Eastern Standard Time",abbr:"SEST",offset:-3,isdst:!1,text:"(UTC-03:00) Cayenne, Fortaleza",utc:["America/Araguaina","America/Belem","America/Cayenne","America/Fortaleza","America/Maceio","America/Paramaribo","America/Recife","America/Santarem","Antarctica/Rothera","Atlantic/Stanley","Etc/GMT+3"]},{value:"Greenland Standard Time",abbr:"GDT",offset:-3,isdst:!0,text:"(UTC-03:00) Greenland",utc:["America/Godthab"]},{value:"Montevideo Standard Time",abbr:"MST",offset:-3,isdst:!1,text:"(UTC-03:00) Montevideo",utc:["America/Montevideo"]},{value:"Bahia Standard Time",abbr:"BST",offset:-3,isdst:!1,text:"(UTC-03:00) Salvador",utc:["America/Bahia"]},{value:"UTC-02",abbr:"U",offset:-2,isdst:!1,text:"(UTC-02:00) Coordinated Universal Time-02",utc:["America/Noronha","Atlantic/South_Georgia","Etc/GMT+2"]},{value:"Mid-Atlantic Standard Time",abbr:"MDT",offset:-1,isdst:!0,text:"(UTC-02:00) Mid-Atlantic - Old",utc:[]},{value:"Azores Standard Time",abbr:"ADT",offset:0,isdst:!0,text:"(UTC-01:00) Azores",utc:["America/Scoresbysund","Atlantic/Azores"]},{value:"Cape Verde Standard Time",abbr:"CVST",offset:-1,isdst:!1,text:"(UTC-01:00) Cape Verde Is.",utc:["Atlantic/Cape_Verde","Etc/GMT+1"]},{value:"Morocco Standard Time",abbr:"MDT",offset:1,isdst:!0,text:"(UTC) Casablanca",utc:["Africa/Casablanca","Africa/El_Aaiun"]},{value:"UTC",abbr:"UTC",offset:0,isdst:!1,text:"(UTC) Coordinated Universal Time",utc:["America/Danmarkshavn","Etc/GMT"]},{value:"GMT Standard Time",abbr:"GMT",offset:0,isdst:!1,text:"(UTC) Edinburgh, London",utc:["Europe/Isle_of_Man","Europe/Guernsey","Europe/Jersey","Europe/London"]},{value:"British Summer Time",abbr:"BST",offset:1,isdst:!0,text:"(UTC+01:00) Edinburgh, London",utc:["Europe/Isle_of_Man","Europe/Guernsey","Europe/Jersey","Europe/London"]},{value:"GMT Standard Time",abbr:"GDT",offset:1,isdst:!0,text:"(UTC) Dublin, Lisbon",utc:["Atlantic/Canary","Atlantic/Faeroe","Atlantic/Madeira","Europe/Dublin","Europe/Lisbon"]},{value:"Greenwich Standard Time",abbr:"GST",offset:0,isdst:!1,text:"(UTC) Monrovia, Reykjavik",utc:["Africa/Abidjan","Africa/Accra","Africa/Bamako","Africa/Banjul","Africa/Bissau","Africa/Conakry","Africa/Dakar","Africa/Freetown","Africa/Lome","Africa/Monrovia","Africa/Nouakchott","Africa/Ouagadougou","Africa/Sao_Tome","Atlantic/Reykjavik","Atlantic/St_Helena"]},{value:"W. Europe Standard Time",abbr:"WEDT",offset:2,isdst:!0,text:"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",utc:["Arctic/Longyearbyen","Europe/Amsterdam","Europe/Andorra","Europe/Berlin","Europe/Busingen","Europe/Gibraltar","Europe/Luxembourg","Europe/Malta","Europe/Monaco","Europe/Oslo","Europe/Rome","Europe/San_Marino","Europe/Stockholm","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Zurich"]},{value:"Central Europe Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",utc:["Europe/Belgrade","Europe/Bratislava","Europe/Budapest","Europe/Ljubljana","Europe/Podgorica","Europe/Prague","Europe/Tirane"]},{value:"Romance Standard Time",abbr:"RDT",offset:2,isdst:!0,text:"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris",utc:["Africa/Ceuta","Europe/Brussels","Europe/Copenhagen","Europe/Madrid","Europe/Paris"]},{value:"Central European Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb",utc:["Europe/Sarajevo","Europe/Skopje","Europe/Warsaw","Europe/Zagreb"]},{value:"W. Central Africa Standard Time",abbr:"WCAST",offset:1,isdst:!1,text:"(UTC+01:00) West Central Africa",utc:["Africa/Algiers","Africa/Bangui","Africa/Brazzaville","Africa/Douala","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Luanda","Africa/Malabo","Africa/Ndjamena","Africa/Niamey","Africa/Porto-Novo","Africa/Tunis","Etc/GMT-1"]},{value:"Namibia Standard Time",abbr:"NST",offset:1,isdst:!1,text:"(UTC+01:00) Windhoek",utc:["Africa/Windhoek"]},{value:"GTB Standard Time",abbr:"GDT",offset:3,isdst:!0,text:"(UTC+02:00) Athens, Bucharest",utc:["Asia/Nicosia","Europe/Athens","Europe/Bucharest","Europe/Chisinau"]},{value:"Middle East Standard Time",abbr:"MEDT",offset:3,isdst:!0,text:"(UTC+02:00) Beirut",utc:["Asia/Beirut"]},{value:"Egypt Standard Time",abbr:"EST",offset:2,isdst:!1,text:"(UTC+02:00) Cairo",utc:["Africa/Cairo"]},{value:"Syria Standard Time",abbr:"SDT",offset:3,isdst:!1,text:"(UTC+02:00) Damascus",utc:["Asia/Damascus"]},{value:"E. Europe Standard Time",abbr:"EEDT",offset:3,isdst:!0,text:"(UTC+02:00) E. Europe",utc:["Asia/Nicosia","Europe/Athens","Europe/Bucharest","Europe/Chisinau","Europe/Helsinki","Europe/Kyiv","Europe/Mariehamn","Europe/Nicosia","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Uzhhorod","Europe/Vilnius","Europe/Zaporizhzhia"]},{value:"South Africa Standard Time",abbr:"SAST",offset:2,isdst:!1,text:"(UTC+02:00) Harare, Pretoria",utc:["Africa/Blantyre","Africa/Bujumbura","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Kigali","Africa/Lubumbashi","Africa/Lusaka","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Etc/GMT-2"]},{value:"FLE Standard Time",abbr:"FDT",offset:3,isdst:!0,text:"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius",utc:["Europe/Helsinki","Europe/Kyiv","Europe/Mariehamn","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Uzhhorod","Europe/Vilnius","Europe/Zaporizhzhia"]},{value:"Turkey Standard Time",abbr:"TDT",offset:3,isdst:!1,text:"(UTC+03:00) Istanbul",utc:["Europe/Istanbul"]},{value:"Israel Standard Time",abbr:"JDT",offset:3,isdst:!0,text:"(UTC+02:00) Jerusalem",utc:["Asia/Jerusalem"]},{value:"Libya Standard Time",abbr:"LST",offset:2,isdst:!1,text:"(UTC+02:00) Tripoli",utc:["Africa/Tripoli"]},{value:"Jordan Standard Time",abbr:"JST",offset:3,isdst:!1,text:"(UTC+03:00) Amman",utc:["Asia/Amman"]},{value:"Arabic Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Baghdad",utc:["Asia/Baghdad"]},{value:"Kaliningrad Standard Time",abbr:"KST",offset:3,isdst:!1,text:"(UTC+02:00) Kaliningrad",utc:["Europe/Kaliningrad"]},{value:"Arab Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Kuwait, Riyadh",utc:["Asia/Aden","Asia/Bahrain","Asia/Kuwait","Asia/Qatar","Asia/Riyadh"]},{value:"E. Africa Standard Time",abbr:"EAST",offset:3,isdst:!1,text:"(UTC+03:00) Nairobi",utc:["Africa/Addis_Ababa","Africa/Asmera","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Mogadishu","Africa/Nairobi","Antarctica/Syowa","Etc/GMT-3","Indian/Antananarivo","Indian/Comoro","Indian/Mayotte"]},{value:"Moscow Standard Time",abbr:"MSK",offset:3,isdst:!1,text:"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk",utc:["Europe/Kirov","Europe/Moscow","Europe/Simferopol","Europe/Volgograd","Europe/Minsk"]},{value:"Samara Time",abbr:"SAMT",offset:4,isdst:!1,text:"(UTC+04:00) Samara, Ulyanovsk, Saratov",utc:["Europe/Astrakhan","Europe/Samara","Europe/Ulyanovsk"]},{value:"Iran Standard Time",abbr:"IDT",offset:4.5,isdst:!0,text:"(UTC+03:30) Tehran",utc:["Asia/Tehran"]},{value:"Arabian Standard Time",abbr:"AST",offset:4,isdst:!1,text:"(UTC+04:00) Abu Dhabi, Muscat",utc:["Asia/Dubai","Asia/Muscat","Etc/GMT-4"]},{value:"Azerbaijan Standard Time",abbr:"ADT",offset:5,isdst:!0,text:"(UTC+04:00) Baku",utc:["Asia/Baku"]},{value:"Mauritius Standard Time",abbr:"MST",offset:4,isdst:!1,text:"(UTC+04:00) Port Louis",utc:["Indian/Mahe","Indian/Mauritius","Indian/Reunion"]},{value:"Georgian Standard Time",abbr:"GET",offset:4,isdst:!1,text:"(UTC+04:00) Tbilisi",utc:["Asia/Tbilisi"]},{value:"Caucasus Standard Time",abbr:"CST",offset:4,isdst:!1,text:"(UTC+04:00) Yerevan",utc:["Asia/Yerevan"]},{value:"Afghanistan Standard Time",abbr:"AST",offset:4.5,isdst:!1,text:"(UTC+04:30) Kabul",utc:["Asia/Kabul"]},{value:"West Asia Standard Time",abbr:"WAST",offset:5,isdst:!1,text:"(UTC+05:00) Ashgabat, Tashkent",utc:["Antarctica/Mawson","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Dushanbe","Asia/Oral","Asia/Samarkand","Asia/Tashkent","Etc/GMT-5","Indian/Kerguelen","Indian/Maldives"]},{value:"Yekaterinburg Time",abbr:"YEKT",offset:5,isdst:!1,text:"(UTC+05:00) Yekaterinburg",utc:["Asia/Yekaterinburg"]},{value:"Pakistan Standard Time",abbr:"PKT",offset:5,isdst:!1,text:"(UTC+05:00) Islamabad, Karachi",utc:["Asia/Karachi"]},{value:"India Standard Time",abbr:"IST",offset:5.5,isdst:!1,text:"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",utc:["Asia/Kolkata","Asia/Calcutta"]},{value:"Sri Lanka Standard Time",abbr:"SLST",offset:5.5,isdst:!1,text:"(UTC+05:30) Sri Jayawardenepura",utc:["Asia/Colombo"]},{value:"Nepal Standard Time",abbr:"NST",offset:5.75,isdst:!1,text:"(UTC+05:45) Kathmandu",utc:["Asia/Kathmandu"]},{value:"Central Asia Standard Time",abbr:"CAST",offset:6,isdst:!1,text:"(UTC+06:00) Nur-Sultan (Astana)",utc:["Antarctica/Vostok","Asia/Almaty","Asia/Bishkek","Asia/Qyzylorda","Asia/Urumqi","Etc/GMT-6","Indian/Chagos"]},{value:"Bangladesh Standard Time",abbr:"BST",offset:6,isdst:!1,text:"(UTC+06:00) Dhaka",utc:["Asia/Dhaka","Asia/Thimphu"]},{value:"Myanmar Standard Time",abbr:"MST",offset:6.5,isdst:!1,text:"(UTC+06:30) Yangon (Rangoon)",utc:["Asia/Rangoon","Indian/Cocos"]},{value:"SE Asia Standard Time",abbr:"SAST",offset:7,isdst:!1,text:"(UTC+07:00) Bangkok, Hanoi, Jakarta",utc:["Antarctica/Davis","Asia/Bangkok","Asia/Hovd","Asia/Jakarta","Asia/Phnom_Penh","Asia/Pontianak","Asia/Saigon","Asia/Vientiane","Etc/GMT-7","Indian/Christmas"]},{value:"N. Central Asia Standard Time",abbr:"NCAST",offset:7,isdst:!1,text:"(UTC+07:00) Novosibirsk",utc:["Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Tomsk"]},{value:"China Standard Time",abbr:"CST",offset:8,isdst:!1,text:"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi",utc:["Asia/Hong_Kong","Asia/Macau","Asia/Shanghai"]},{value:"North Asia Standard Time",abbr:"NAST",offset:8,isdst:!1,text:"(UTC+08:00) Krasnoyarsk",utc:["Asia/Krasnoyarsk"]},{value:"Singapore Standard Time",abbr:"MPST",offset:8,isdst:!1,text:"(UTC+08:00) Kuala Lumpur, Singapore",utc:["Asia/Brunei","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Makassar","Asia/Manila","Asia/Singapore","Etc/GMT-8"]},{value:"W. Australia Standard Time",abbr:"WAST",offset:8,isdst:!1,text:"(UTC+08:00) Perth",utc:["Antarctica/Casey","Australia/Perth"]},{value:"Taipei Standard Time",abbr:"TST",offset:8,isdst:!1,text:"(UTC+08:00) Taipei",utc:["Asia/Taipei"]},{value:"Ulaanbaatar Standard Time",abbr:"UST",offset:8,isdst:!1,text:"(UTC+08:00) Ulaanbaatar",utc:["Asia/Choibalsan","Asia/Ulaanbaatar"]},{value:"North Asia East Standard Time",abbr:"NAEST",offset:8,isdst:!1,text:"(UTC+08:00) Irkutsk",utc:["Asia/Irkutsk"]},{value:"Japan Standard Time",abbr:"JST",offset:9,isdst:!1,text:"(UTC+09:00) Osaka, Sapporo, Tokyo",utc:["Asia/Dili","Asia/Jayapura","Asia/Tokyo","Etc/GMT-9","Pacific/Palau"]},{value:"Korea Standard Time",abbr:"KST",offset:9,isdst:!1,text:"(UTC+09:00) Seoul",utc:["Asia/Pyongyang","Asia/Seoul"]},{value:"Cen. Australia Standard Time",abbr:"CAST",offset:9.5,isdst:!1,text:"(UTC+09:30) Adelaide",utc:["Australia/Adelaide","Australia/Broken_Hill"]},{value:"AUS Central Standard Time",abbr:"ACST",offset:9.5,isdst:!1,text:"(UTC+09:30) Darwin",utc:["Australia/Darwin"]},{value:"E. Australia Standard Time",abbr:"EAST",offset:10,isdst:!1,text:"(UTC+10:00) Brisbane",utc:["Australia/Brisbane","Australia/Lindeman"]},{value:"AUS Eastern Standard Time",abbr:"AEST",offset:10,isdst:!1,text:"(UTC+10:00) Canberra, Melbourne, Sydney",utc:["Australia/Melbourne","Australia/Sydney"]},{value:"West Pacific Standard Time",abbr:"WPST",offset:10,isdst:!1,text:"(UTC+10:00) Guam, Port Moresby",utc:["Antarctica/DumontDUrville","Etc/GMT-10","Pacific/Guam","Pacific/Port_Moresby","Pacific/Saipan","Pacific/Truk"]},{value:"Tasmania Standard Time",abbr:"TST",offset:10,isdst:!1,text:"(UTC+10:00) Hobart",utc:["Australia/Currie","Australia/Hobart"]},{value:"Yakutsk Standard Time",abbr:"YST",offset:9,isdst:!1,text:"(UTC+09:00) Yakutsk",utc:["Asia/Chita","Asia/Khandyga","Asia/Yakutsk"]},{value:"Central Pacific Standard Time",abbr:"CPST",offset:11,isdst:!1,text:"(UTC+11:00) Solomon Is., New Caledonia",utc:["Antarctica/Macquarie","Etc/GMT-11","Pacific/Efate","Pacific/Guadalcanal","Pacific/Kosrae","Pacific/Noumea","Pacific/Ponape"]},{value:"Vladivostok Standard Time",abbr:"VLAT",offset:10,isdst:!1,text:"(UTC+10:00) Vladivostok",utc:["Asia/Ust-Nera","Asia/Vladivostok"]},{value:"Sakhalin Standard Time",abbr:"SAKT",offset:11,isdst:!1,text:"(UTC+11:00) Sakhalin",utc:["Asia/Sakhalin"]},{value:"New Zealand Standard Time",abbr:"NZST",offset:12,isdst:!1,text:"(UTC+12:00) Auckland, Wellington",utc:["Antarctica/McMurdo","Pacific/Auckland"]},{value:"UTC+12",abbr:"U",offset:12,isdst:!1,text:"(UTC+12:00) Coordinated Universal Time+12",utc:["Etc/GMT-12","Pacific/Funafuti","Pacific/Kwajalein","Pacific/Majuro","Pacific/Nauru","Pacific/Tarawa","Pacific/Wake","Pacific/Wallis"]},{value:"Fiji Standard Time",abbr:"FST",offset:12,isdst:!1,text:"(UTC+12:00) Fiji",utc:["Pacific/Fiji"]},{value:"Magadan Standard Time",abbr:"MST",offset:12,isdst:!1,text:"(UTC+12:00) Magadan",utc:["Asia/Anadyr","Asia/Kamchatka","Asia/Magadan","Asia/Srednekolymsk"]},{value:"Kamchatka Standard Time",abbr:"KDT",offset:13,isdst:!0,text:"(UTC+12:00) Petropavlovsk-Kamchatsky - Old",utc:["Asia/Kamchatka"]},{value:"Tonga Standard Time",abbr:"TST",offset:13,isdst:!1,text:"(UTC+13:00) Nuku'alofa",utc:["Etc/GMT-13","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Tongatapu"]},{value:"Samoa Standard Time",abbr:"SST",offset:13,isdst:!1,text:"(UTC+13:00) Samoa",utc:["Pacific/Apia"]}]}}},aa=Object.assign(ea,{setup(e){return(i,a)=>{const r=w("font-awesome-icon");return o(),l("main",De,[t("div",Pe,[t("header",null,[t("span",Be,[a[8]||(a[8]=t("a",{class:"screen-reader-only"},"Skip to Content",-1)),t("a",$e,[c(r,{icon:"caret-left"}),a[7]||(a[7]=T(" Back"))])]),c(E,{current:i.CurrentStudent,students:i.AllStudents},null,8,["current","students"]),c(U,null,{default:v(()=>[T(f(i.User.displayName?i.User.displayName.split(" ")[0]:"Joost"),1)]),_:1})]),t("div",Ne,[c(A,{classes:"btn btn-invoice",label:"Generate invoice",onClicked:i.get_invoice,base:"print"},{default:v(()=>a[9]||(a[9]=[T(" Invoice")])),_:1,__:[9]},8,["onClicked"]),c(A,{classes:"btn btn-add-class",label:"Add new class",onClicked:i.add_session},{default:v(()=>a[10]||(a[10]=[T(" New Class")])),_:1,__:[10]},8,["onClicked"]),t("span",Ie,[a[11]||(a[11]=t("label",{class:"screen-reader-only",for:"date-start"},"Date start",-1)),t("input",{type:"text",id:"date-start",value:m(C)(i.Dates.start)},null,8,je),a[12]||(a[12]=T(" – ")),a[13]||(a[13]=t("label",{class:"screen-reader-only",for:"date-end"},"Date end",-1)),t("input",{type:"text",id:"date-end",value:m(C)(i.Dates.end)},null,8,Ge),t("button",{class:"btn btn-dates",onClick:a[0]||(a[0]=(...s)=>i.filterDates&&i.filterDates(...s))},"Filter"),t("button",{class:"btn btn-dates",onClick:a[1]||(a[1]=(...s)=>i.resetDateFilter&&i.resetDateFilter(...s))},"Reset")])]),t("div",Fe,[t("select",Le,[a[14]||(a[14]=t("option",{value:"",selected:""},"-- Select Timezone for Invoice --",-1)),(o(!0),l(g,null,k(i.Timezones,s=>(o(),l("option",{value:s.utc[0]},f(s.text),9,Ke))),256))])]),t("div",Ve,[t("div",ze,[t("span",Re,[t("details",null,[t("summary",null,[c(r,{icon:"print"}),a[15]||(a[15]=t("span",{class:"screen-reader-only"},"Filter sessions for invoice",-1))]),t("div",Je,[t("ul",He,[t("li",We,[t("a",{href:"#",onClick:a[2]||(a[2]=(...s)=>i.checkFiltered&&i.checkFiltered(...s))},"Check All")]),t("li",qe,[t("a",{href:"#",onClick:a[3]||(a[3]=(...s)=>i.uncheckFiltered&&i.uncheckFiltered(...s))},"Uncheck All")]),t("li",Oe,[t("a",{href:"#",onClick:a[4]||(a[4]=(...s)=>i.viewAllSessions&&i.viewAllSessions(...s))},"View All")]),t("li",Ye,[t("a",{href:"#",onClick:a[5]||(a[5]=(...s)=>i.viewPaidSessions&&i.viewPaidSessions(...s))},"View Paid")]),t("li",Ze,[t("a",{href:"#",onClick:a[6]||(a[6]=(...s)=>i.viewUnpaidSessions&&i.viewUnpaidSessions(...s))},"View Unpaid")])]),a[16]||(a[16]=t("ul",{class:"check-list-ul"},[t("li",{class:"check-list-li"},[t("a",null,"Mark as Paid")]),t("li",{class:"check-list-li"},[t("a",null,"Mark as Unpaid")])],-1))])])]),a[17]||(a[17]=D('<span class="table-text id-table"> </span><span class="table-text date-table">Date</span><span class="table-text time-table">In</span><span class="table-text time-table">Out</span><span class="table-text rate-table">Rate</span><span class="table-text charge-table">Charge</span><span class="table-text btn-table"></span>',7))]),t("div",Qe,[(o(!0),l(g,null,k(i.Filtered,s=>(o(),B(M,{key:s.number,selected:s.selected,paid:s.paid,id:s.number,time_in:s.in_time,time_out:s.out_time,rate:s.rate,onSelected:n=>i.updateFiltered(s.number)},null,8,["selected","paid","id","time_in","time_out","rate","onSelected"]))),128)),i.Filtered.length===0?(o(),l("div",Xe,a[18]||(a[18]=[t("h5",{class:"table-text rate-table"},"No Classes, add one!",-1)]))):P("",!0)])]),c(_,{fname:i.CurrentStudent.fname,lname:i.CurrentStudent.lname,active:i.CurrentStudent.active,rate:i.CurrentStudent.rate},null,8,["fname","lname","active","rate"])])])}}});b.add($);b.add(N);b.add(I);b.add(j);b.add(G);b.add(F);b.add(L);b.add(K);b.add(V);z(aa).component("font-awesome-icon",R).mount("#app");
